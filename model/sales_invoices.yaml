cubes:
  - name: sales_invoices
    sql_table: "{{ env_var('CUBEJS_DB_NAME', 'FIVETRAN_DATABASE') }}.{{ env_var('CUBEJS_DB_SNOWFLAKE_SCHEMA', 'BUSINESS_CENTRAL') }}.SALES_INVOICE_HEADER"
    title: Posted Sales Invoices
    description: Posted sales invoice headers with revenue metrics
    
    joins:
      - name: customers
        sql: "{CUBE}.CUSTOMER_ID = {customers}.SYSTEMID"
        relationship: many_to_one
        
      - name: sales_invoice_lines
        sql: "{CUBE}.SYSTEMID = {sales_invoice_lines}.DOCUMENT_ID"
        relationship: one_to_many
    
    dimensions:
      - name: system_id
        sql: SYSTEMID
        type: string
        primary_key: true
        
      - name: no
        sql: NO
        type: string
        title: Invoice No.
        
      - name: customer_id
        sql: CUSTOMER_ID
        type: string
        
      - name: sell_to_customer_no
        sql: SELL_TO_CUSTOMER_NO
        type: string
        title: Customer No.
        
      - name: sell_to_customer_name
        sql: SELL_TO_CUSTOMER_NAME
        type: string
        title: Customer Name
        
      - name: posting_date
        sql: POSTING_DATE
        type: time
        
      - name: document_date
        sql: DOCUMENT_DATE
        type: time
        
      - name: due_date
        sql: DUE_DATE
        type: time
        
      - name: payment_date
        sql: PAYMENT_DATE
        type: time
        
      - name: currency_code
        sql: CURRENCY_CODE
        type: string
        
      - name: currency_factor
        sql: CURRENCY_FACTOR
        type: number
        
      - name: salesperson_code
        sql: SALESPERSON_CODE
        type: string
        
      - name: order_no
        sql: ORDER_NO
        type: string
        title: Original Order No.
        
      - name: amount
        sql: AMOUNT
        type: number
        format: currency
        
      - name: amount_including_vat
        sql: AMOUNT_INCLUDING_VAT
        type: number
        format: currency
        
      - name: remaining_amount
        sql: REMAINING_AMOUNT
        type: number
        format: currency
        
      - name: payment_terms_code
        sql: PAYMENT_TERMS_CODE
        type: string
        
      - name: payment_method_code
        sql: PAYMENT_METHOD_CODE
        type: string
        
      - name: location_code
        sql: LOCATION_CODE
        type: string
        
      - name: shipment_method_code
        sql: SHIPMENT_METHOD_CODE
        type: string
        
      - name: company_id
        sql: COMPANY_ID
        type: string
        
      - name: paid_status
        sql: |
          CASE 
            WHEN REMAINING_AMOUNT = 0 THEN 'Paid'
            WHEN REMAINING_AMOUNT = AMOUNT_INCLUDING_VAT THEN 'Unpaid'
            ELSE 'Partially Paid'
          END
        type: string
        title: Payment Status
        
      - name: days_overdue
        sql: |
          CASE 
            WHEN REMAINING_AMOUNT > 0 AND DUE_DATE < CURRENT_DATE() 
            THEN DATEDIFF(DAY, DUE_DATE, CURRENT_DATE())
            ELSE 0
          END
        type: number
        title: Days Overdue
    
    measures:
      - name: count
        type: count
        title: Total Invoices
        
      - name: total_revenue
        sql: AMOUNT
        type: sum
        title: Total Revenue
        format: currency
        
      - name: total_revenue_incl_vat
        sql: AMOUNT_INCLUDING_VAT
        type: sum
        title: Total Revenue (Incl. VAT)
        format: currency
        
      - name: total_outstanding
        sql: REMAINING_AMOUNT
        type: sum
        title: Total Outstanding
        format: currency
        
      - name: avg_invoice_value
        sql: AMOUNT
        type: avg
        title: Average Invoice Value
        format: currency
        
      - name: paid_invoices
        type: count
        title: Paid Invoices
        filters:
          - sql: "{CUBE}.REMAINING_AMOUNT = 0"
          
      - name: unpaid_invoices
        type: count
        title: Unpaid Invoices
        filters:
          - sql: "{CUBE}.REMAINING_AMOUNT > 0"
          
      - name: overdue_invoices
        type: count
        title: Overdue Invoices
        filters:
          - sql: "{CUBE}.REMAINING_AMOUNT > 0 AND {CUBE}.DUE_DATE < CURRENT_DATE()"
          
      - name: overdue_amount
        sql: REMAINING_AMOUNT
        type: sum
        title: Overdue Amount
        format: currency
        filters:
          - sql: "{CUBE}.REMAINING_AMOUNT > 0 AND {CUBE}.DUE_DATE < CURRENT_DATE()"
          
      - name: unique_customers
        sql: CUSTOMER_ID
        type: count_distinct
        title: Unique Customers
        
      - name: days_sales_outstanding
        sql: |
          SUM(REMAINING_AMOUNT) / NULLIF(SUM(AMOUNT) / 365.0, 0)
        type: number
        title: DSO (Days Sales Outstanding)
        format: number
    
    pre_aggregations:
      - name: invoice_summary_daily
        measures:
          - count
          - total_revenue
          - total_outstanding
          - paid_invoices
          - unpaid_invoices
          - overdue_invoices
        dimensions:
          - paid_status
          - company_id
          - salesperson_code
        time_dimension: posting_date
        granularity: day
        refresh_key:
          every: 30 minutes
          
  - name: sales_invoice_lines
    sql_table: "{{ env_var('CUBEJS_DB_NAME', 'FIVETRAN_DATABASE') }}.{{ env_var('CUBEJS_DB_SNOWFLAKE_SCHEMA', 'BUSINESS_CENTRAL') }}.SALES_INVOICE_LINE"
    title: Posted Sales Invoice Lines
    description: Posted sales invoice line details with product analytics
    
    joins:
      - name: sales_invoices
        sql: "{CUBE}.DOCUMENT_ID = {sales_invoices}.SYSTEMID"
        relationship: many_to_one
        
    
    dimensions:
      - name: system_id
        sql: SYSTEMID
        type: string
        primary_key: true
        
      - name: document_id
        sql: DOCUMENT_ID
        type: string
        
      - name: document_no
        sql: DOCUMENT_NO
        type: string
        
      - name: line_no
        sql: LINE_NO
        type: number
        
      - name: type
        sql: TYPE
        type: string
        
      - name: no
        sql: NO
        type: string
        title: Item/Account No.
        
      - name: description
        sql: DESCRIPTION
        type: string
        
      - name: location_code
        sql: LOCATION_CODE
        type: string
        
      - name: quantity
        sql: QUANTITY
        type: number
        
      - name: unit_of_measure_code
        sql: UNIT_OF_MEASURE_CODE
        type: string
        
      - name: unit_price
        sql: UNIT_PRICE
        type: number
        format: currency
        
      - name: unit_cost_lcy
        sql: UNIT_COST_LCY
        type: number
        format: currency
        
      - name: line_discount_percent
        sql: LINE_DISCOUNT_PERCENT
        type: number
        format: percent
        
      - name: line_amount
        sql: LINE_AMOUNT
        type: number
        format: currency
        
      - name: amount
        sql: AMOUNT
        type: number
        format: currency
        
      - name: amount_including_vat
        sql: AMOUNT_INCLUDING_VAT
        type: number
        format: currency
        
      - name: company_id
        sql: COMPANY_ID
        type: string
    
    measures:
      - name: count
        type: count
        title: Total Lines
        
      - name: total_quantity_sold
        sql: QUANTITY
        type: sum
        title: Total Quantity Sold
        
      - name: total_revenue
        sql: AMOUNT
        type: sum
        title: Total Revenue
        format: currency
        
      - name: total_revenue_incl_vat
        sql: AMOUNT_INCLUDING_VAT
        type: sum
        title: Total Revenue (Incl. VAT)
        format: currency
        
      - name: total_cost
        sql: "QUANTITY * UNIT_COST_LCY"
        type: sum
        title: Total Cost
        format: currency
        
      - name: gross_profit
        sql: "AMOUNT - (QUANTITY * UNIT_COST_LCY)"
        type: sum
        title: Gross Profit
        format: currency
        
      - name: gross_margin_percent
        sql: |
          CASE 
            WHEN SUM(AMOUNT) > 0 
            THEN (SUM(AMOUNT) - SUM(QUANTITY * UNIT_COST_LCY)) / SUM(AMOUNT) * 100 
            ELSE 0 
          END
        type: number
        title: Gross Margin %
        format: percent
        
      - name: avg_unit_price
        sql: UNIT_PRICE
        type: avg
        title: Average Unit Price
        format: currency
        
      - name: avg_discount_given
        sql: LINE_DISCOUNT_PERCENT
        type: avg
        title: Average Discount Given
        format: percent
        
      - name: unique_items_sold
        sql: NO
        type: count_distinct
        title: Unique Items Sold
        filters:
          - sql: "{CUBE}.TYPE = 'Item'"